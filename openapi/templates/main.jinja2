{# --------------------------------------------------------------------------
   main.jinja2 - Template for openapi-code-generator.
   Copyright (C) 2023 kWatanabe (@wwatchin)
   This file is licensed by MIT License. See "LICENSE".
   -------------------------------------------------------------------------- #}

from __future__ import annotations
from typing import Annotated

{{imports}}

from fastapi import FastAPI, Depends
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
from handler import *

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
    {% if value is string %}
    {{ key }} = "{{ value }}",
    {% else %}
    {{ key }} = {{ value }},
    {% endif %}
    {% endfor %}
    {% endif %}
    )

def validation (cred: HTTPAuthorizationCredentials = Depends(HTTPBearer())) -> dict:
    return do_validation(token=cred.credentials)

{% for operation in operations %}
@app.{{operation.type}}('{{operation.snake_case_path}}', response_model={{operation.response}})
def {{operation.function_name}}(
    {%- if operation.security -%}userinfo: Annotated[dict,Depends(validation)],{%- endif -%}
    {{operation.snake_case_arguments}}
) -> {{operation.response}}:
    {%- if operation.summary %}
    """
    {{ operation.summary }}
    """
    {%- endif %}
    return do_{{operation.function_name}}(
        {%- if operation.security -%}
        userinfo=userinfo,
        {% endif %}
        {% for arg in operation.snake_case_arguments.split(',') %}
        {% if ':' in arg %}
        {{ arg.split(':')[0] }}={{ arg.split(':')[0] }},
        {% endif %}
        {% endfor %}
    )
{% endfor %}
